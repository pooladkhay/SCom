(define-primitive ($fxadd1 arg)
    (emit-expr arg)
    (emit "  addl $~s, %eax" (rep-immediate 1)))

(define-primitive ($fixnum->char arg)
    (emit-expr arg)
    (emit "  shll $~s, %eax" (- char-shift fx-shift))
    (emit "  orl $~s, %eax" char-tag))

(define-primitive ($char->fixnum arg)
    (emit-expr arg)
    (emit "  shrl $~s, %eax" (- char-shift fx-shift)))

(define-primitive (fixnum? arg)
    (emit-expr arg)
    (emit "  and $~s, %al" fx-mask)
    (emit "  cmp $~s, %al" fx-tag)
    (emit "  sete %al")
    (emit "  movzbl %al, %eax")
    (emit "  sal $~s, %al" bool-bit)
    (emit "  or $~s, %al" bool-f))

(define-primitive ($fxzero? arg)
    (emit-expr arg)
    (emit "  and $~s, %eax" #xFFFFFFFF)
    (emit "  cmp $~s, %eax" #x0)
    (emit "  sete %al")
    (emit "  movzbl %al, %eax")
    (emit "  sal $~s, %al" bool-bit)
    (emit "  or $~s, %al" bool-f))

(define-primitive (null? arg)
    (emit-expr arg)
    (emit "  xor $~s, %al" empty-list)
    (emit "  cmp $~s, %al" #x0)
    (emit "  sete %al")
    (emit "  movzbl %al, %eax")
    (emit "  sal $~s, %al" bool-bit)
    (emit "  or $~s, %al" bool-f))

(define-primitive (boolean? arg)
    (emit-expr arg)
    (emit "  shll $~s, %eax" 2)
    (emit "  xor $~s, %al" bool-mask)
    (emit "  cmp $~s, %al" #x0)
    (emit "  sete %al")
    (emit "  movzbl %al, %eax")
    (emit "  sal $~s, %al" bool-bit)
    (emit "  or $~s, %al" bool-f))

(define-primitive (char? arg)
    (emit-expr arg)
    (emit "  and $~s, %al" char-mask)
    (emit "  cmp $~s, %al" char-tag)
    (emit "  sete %al")
    (emit "  movzbl %al, %eax")
    (emit "  sal $~s, %al" bool-bit)
    (emit "  or $~s, %al" bool-f))

(define-primitive (not arg)
    (emit-expr arg)
    (emit "  and $~s, %al" #xFF)
    (emit "  cmp $~s, %al" bool-f)
    (emit "  sete %al")
    (emit "  movzbl %al, %eax")
    (emit "  sal $~s, %al" bool-bit)
    (emit "  or $~s, %al" bool-f))

(define-primitive ($fxlognot arg)
    (emit-expr arg)
    (emit "  shrl $~s, %eax" fx-shift)
    (emit "  xor $~s, %eax" #xFFFFFFFF)
    (emit "  shll $~s, %eax" fx-shift))
